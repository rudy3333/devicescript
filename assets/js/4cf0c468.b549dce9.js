"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1500],{35318:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>f});var a=r(27378);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=a.createContext({}),u=function(e){var t=a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},p=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},d="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=u(r),m=n,f=d["".concat(s,".").concat(m)]||d[m]||c[m]||i;return r?a.createElement(f,o(o({ref:t},p),{},{components:r})):a.createElement(f,o({ref:t},p))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,o=new Array(i);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[d]="string"==typeof e?e:n,o[1]=l;for(var u=2;u<i;u++)o[u]=r[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},65374:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>c,frontMatter:()=>i,metadata:()=>l,toc:()=>u});var a=r(25773),n=(r(27378),r(35318));const i={title:"Adafruit.io",sidebar_position:2},o="Adafruit.io",l={unversionedId:"developer/iot/adafruit-io/index",id:"developer/iot/adafruit-io/index",title:"Adafruit.io",description:"In this sample, we upload temperature readings to Adafruit.io.",source:"@site/docs/developer/iot/adafruit-io/index.mdx",sourceDirName:"developer/iot/adafruit-io",slug:"/developer/iot/adafruit-io/",permalink:"/devicescript/developer/iot/adafruit-io/",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Adafruit.io",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"IoT",permalink:"/devicescript/developer/iot/"},next:{title:"Blues.io Notecard",permalink:"/devicescript/developer/iot/blues-io/"}},s={},u=[{value:"Hardware setup",id:"hardware-setup",level:2},{value:"Firmware setup",id:"firmware-setup",level:2},{value:"Adafruit.io Configuration",id:"adafruitio-configuration",level:2},{value:"Settings configuration",id:"settings-configuration",level:2},{value:"Code",id:"code",level:2},{value:"More on Adafruit.IO",id:"more-on-adafruitio",level:2}],p={toc:u},d="wrapper";function c(e){let{components:t,...i}=e;return(0,n.kt)(d,(0,a.Z)({},p,i,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"adafruitio"},"Adafruit.io"),(0,n.kt)("p",null,"In this sample, we upload temperature readings to ",(0,n.kt)("a",{parentName:"p",href:"https://io.adafruit.com/"},"Adafruit.io"),".\nIt is free for up to 30 data points per minute. This is a great way to get started with IoT."),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"Screenshot of temperature chart",src:r(43054).Z,width:"1354",height:"611"})),(0,n.kt)("admonition",{type:"tip"},(0,n.kt)("p",{parentName:"admonition"},"In this sample, we use the REST APIs to access the Adafruit cloud.\nYou can also use the ",(0,n.kt)("a",{parentName:"p",href:"https://io.adafruit.com/api/docs/mqtt.html#adafruit-io-mqtt-api"},"MQTT APIs"),"\nwith the ",(0,n.kt)("a",{parentName:"p",href:"/developer/net/mqtt/"},"MQTT client"),".")),(0,n.kt)("p",null,"We'll assume you have Visual Studio Code installed and the DeviceScript extension installed."),(0,n.kt)("p",null,"To get started create a new project by using ",(0,n.kt)("strong",{parentName:"p"},"DeviceScript: Create New Project..."),"."),(0,n.kt)("h2",{id:"hardware-setup"},"Hardware setup"),(0,n.kt)("p",null,"We'll use the Qt Py and a SHTC3 from Adafruit for this sample."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("img",{parentName:"li",src:"https://microsoft.github.io/jacdac-docs/images/devices/adafruit/qtpyesp32c3wifidevboardv10.avatar.jpg",alt:null})," ",(0,n.kt)("a",{parentName:"li",href:"https://www.adafruit.com/product/5405"},"Adafruit QT Py ESP32-C3 WiFi")," (",(0,n.kt)("a",{parentName:"li",href:"/devices/esp32/adafruit-qt-py-c3"},"configuration"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.adafruit.com/product/4636"},"Adafruit Sensirion SHTC3 Temperature & Humidity Sensor - STEMMA QT / Qwiic"))),(0,n.kt)("p",null,"Make sure to connect the SHTC3 to the QT Py using the Qwiic connector."),(0,n.kt)("h2",{id:"firmware-setup"},"Firmware setup"),(0,n.kt)("p",null,"The Qt Py firmware might need to be updated to the latest version."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"connect the QT Py to your computer"),(0,n.kt)("li",{parentName:"ul"},"Click on the ",(0,n.kt)("strong",{parentName:"li"},"plug")," icon in the DeviceScript explorer and select ",(0,n.kt)("strong",{parentName:"li"},"Flash firmware...")),(0,n.kt)("li",{parentName:"ul"},"select ",(0,n.kt)("strong",{parentName:"li"},"Adafruit QT Py ESP32-C3 WiFi"))),(0,n.kt)("p",null,"Once the flashing is done (you may need to install ",(0,n.kt)("inlineCode",{parentName:"p"},"esptool"),"), re-connect to the device. If all goes well, it will appear in the device explorer."),(0,n.kt)("h2",{id:"adafruitio-configuration"},"Adafruit.io Configuration"),(0,n.kt)("p",null,"Navigate to ",(0,n.kt)("a",{parentName:"p",href:"https://io.adafruit.com/"},"Adafruit.io")," and create an account.\nThen create a new feed and name it ",(0,n.kt)("inlineCode",{parentName:"p"},"temperature"),"."),(0,n.kt)("p",null,"Make note of your user name and the access key. We'll need those shortly."),(0,n.kt)("h2",{id:"settings-configuration"},"Settings configuration"),(0,n.kt)("p",null,"Before writing the logic of the application, we want to configure the script\nfor the current hardware. We will need settings to store WiFi configuration, the Adafruit.io secret key,\nthe pin mapping for the Qt Py and the SHTC3 driver."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"click on the ",(0,n.kt)("strong",{parentName:"li"},"wand")," icon in the file editor menu"),(0,n.kt)("li",{parentName:"ul"},"select the ",(0,n.kt)("strong",{parentName:"li"},"Adafruit QT Py ESP32-C3 WiFi")),(0,n.kt)("li",{parentName:"ul"},"select ",(0,n.kt)("strong",{parentName:"li"},"Sensirion SHTC3")),(0,n.kt)("li",{parentName:"ul"},"click on the ",(0,n.kt)("strong",{parentName:"li"},"wand")," again"),(0,n.kt)("li",{parentName:"ul"},"select ",(0,n.kt)("strong",{parentName:"li"},"Add Device Settings..."))),(0,n.kt)("p",null,"Edit ",(0,n.kt)("inlineCode",{parentName:"p"},".env.local")," and add your Adafruit.io secret key."),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"\u26a0\ufe0f ",(0,n.kt)("inlineCode",{parentName:"p"},".env.local")," should not be committed to source control.")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-yaml"},"# env.defaults\n# public settings, commit to source control\nWIFI_SSID=your-wifi-ssid\n")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-yaml"},"# env.local\n# secrets, don't commit to source control\nIO_KEY=your-secret-key\nWIFI_PWD=your-wifi-password\n")),(0,n.kt)("h2",{id:"code"},"Code"),(0,n.kt)("p",null,"This annotated code sample schedules a task that reads a temperature sensor\nand uploads the value to Adafruit.io every minute."),(0,n.kt)("p",null,"We use the REST API and the ",(0,n.kt)("strong",{parentName:"p"},"fetch")," method to send the data."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},'// hardware configuration and drivers\nimport { pins, board } from "@dsboard/adafruit_qt_py_c3"\nimport { startSHTC3 } from "@devicescript/drivers"\n// extra APIs\nimport { readSetting } from "@devicescript/settings"\nimport { schedule } from "@devicescript/runtime"\nimport { fetch } from "@devicescript/net"\n\n// mounting a temperature server for the SHTC3 sensor\nconst { temperature, humidity } = await startSHTC3()\n\n// feed configuration\nconst user = "user"\nconst feed = "temperature"\n// this secret is stored in the .env.local and uploaded to the device settings\nconst key = await readSetting("IO_KEY")\n\n// Adafruit IO API https://io.adafruit.com/api/docs/#create-data\nconst url = `https://io.adafruit.com/api/v2/${user}/feeds/${feed}/data`\nconst headers = { "X-AIO-Key": key, "Content-Type": "application/json" }\n\nconsole.log({ url })\n\n// run after 1 second and then every minute\nschedule(\n    async () => {\n        // read data from temperature sensor\n        const value = await temperature.reading.read()\n        // craft Adafruit.io payload\n        const body = { value }\n        // send request\n        const { status } = await fetch(url, {\n            method: "POST",\n            headers,\n            body: JSON.stringify(body),\n        })\n        // print HTTP status\n        console.log({ value, status })\n    },\n    { timeout: 1000, interval: 60000 }\n)\n')),(0,n.kt)("h2",{id:"more-on-adafruitio"},"More on Adafruit.IO"),(0,n.kt)("p",null,"If you don't want to remember the REST API syntax, you can use some packages that wrap the Adafruit.io API."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/pelikhan/devicescript-adafruit-io/"},"https://github.com/pelikhan/devicescript-adafruit-io/"))),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts",metastring:"skip",skip:!0},'import { pins, board } from "@dsboard/adafruit_qt_py_c3"\nimport { startSHTC3 } from "@devicescript/drivers"\nimport { schedule } from "@devicescript/runtime"\n// highlight-next-line\nimport { createData } from "devicescript-adafruit-io"\n\nconst { temperature, humidity } = await startSHTC3()\n\nschedule(\n    async () => {\n        const value = await temperature.reading.read()\n        // highlight-next-line\n        await createData(value)\n    },\n    { timeout: 1000, interval: 60000 }\n)\n')))}c.isMDXComponent=!0},43054:(e,t,r)=>{r.d(t,{Z:()=>a});const a=r.p+"assets/images/adafruitio-158caa745d4965548591ec514d363ef2.png"}}]);