"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6164],{35318:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var a=n(27378);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=p(n),m=r,f=d["".concat(s,".").concat(m)]||d[m]||u[m]||i;return n?a.createElement(f,o(o({ref:t},c),{},{components:n})):a.createElement(f,o({ref:t},c))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[d]="string"==typeof e?e:r,o[1]=l;for(var p=2;p<i;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},49792:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var a=n(25773),r=(n(27378),n(35318));const i={},o="Matlab ThingSpeak",l={unversionedId:"developer/iot/matlab-thingspeak/index",id:"developer/iot/matlab-thingspeak/index",title:"Matlab ThingSpeak",description:"Matlab ThingSpeak is an IoT platform",source:"@site/docs/developer/iot/matlab-thingspeak/index.mdx",sourceDirName:"developer/iot/matlab-thingspeak",slug:"/developer/iot/matlab-thingspeak/",permalink:"/devicescript/developer/iot/matlab-thingspeak/",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Blynk.io",permalink:"/devicescript/developer/iot/blynk-io/"},next:{title:"Cryptography",permalink:"/devicescript/developer/crypto"}},s={},p=[{value:"writeData",id:"writedata",level:2}],c={toc:p},d="wrapper";function u(e){let{components:t,...n}=e;return(0,r.kt)(d,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"matlab-thingspeak"},"Matlab ThingSpeak"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://thingspeak.com/"},"Matlab ThingSpeak")," is an IoT platform\nthat allows you to collect and store sensor data in the cloud and develop IoT applications\nin Matlab."),(0,r.kt)("h2",{id:"writedata"},"writeData"),(0,r.kt)("p",null,"ThingSpeak provides a ",(0,r.kt)("a",{parentName:"p",href:"https://www.mathworks.com/help/thingspeak/writedata.html"},"HTTPS REST API")," to write data to a channel."),(0,r.kt)("p",null,"You can use settings to store your ThingSpeak API key and ",(0,r.kt)("inlineCode",{parentName:"p"},"fetch")," to send data to ThingSpeak."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-.env",metastring:'title=".env.local"',title:'".env.local"'},"TS_KEY=api_key\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="./src/main.ts"',title:'"./src/main.ts"'},'import { fetch, Response } from "@devicescript/net"\nimport { readSetting } from "@devicescript/settings"\n\n/**\n * Write data to ThingSpeak channel\n * @param fields\n * @param options\n * @see {@link https://www.mathworks.com/help/thingspeak/writedata.html write data}\n * @see {@link https://www.mathworks.com/help/thingspeak/error-codes.html error codes}\n */\nexport async function writeData(\n    // field values\n    fields?: Record<string, number>,\n    options?: {\n        // Latitude in degrees, specified as a value between -90 and 90.\n        lat?: number\n        // Longitude in degrees, specified as a value between -180 and 180.\n        long?: number\n        // Elevation in meters\n        elevation?: number\n        // Status update message.\n        status?: string\n    }\n) {\n    const url = "https://api.thingspeak.com/update.json"\n    // the secret key should be in .env.local\n    const key = await readSetting("TS_KEY")\n\n    // construct payload\n    const payload: any = {}\n    // field values\n    Object.keys(fields).forEach(k => {\n        const v = fields[k]\n        if (v !== undefined && v !== null) payload[`field${k}`] = v\n    })\n    // additional options\n    if (options) Object.assign(payload, options)\n\n    // send request and return http response\n    let resp: Response\n    try {\n        resp = await fetch(url, {\n            method: "POST",\n            headers: {\n                THINGSPEAKAPIKEY: key,\n                "Content-Type": "application/json",\n            },\n            body: JSON.stringify(payload),\n        })\n        return resp.status\n    } finally {\n        await resp?.close()\n    }\n}\n')))}u.isMDXComponent=!0}}]);