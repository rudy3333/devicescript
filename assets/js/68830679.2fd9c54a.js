"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1495],{35318:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>b});var n=r(27378);function s(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){s(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function a(e,t){if(null==e)return{};var r,n,s=function(e,t){if(null==e)return{};var r,n,s={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(s[r]=e[r]);return s}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(s[r]=e[r])}return s}var c=n.createContext({}),l=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=l(e.components);return n.createElement(c.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,s=e.mdxType,o=e.originalType,c=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),p=l(r),m=s,b=p["".concat(c,".").concat(m)]||p[m]||d[m]||o;return r?n.createElement(b,i(i({ref:t},u),{},{components:r})):n.createElement(b,i({ref:t},u))}));function b(e,t){var r=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var o=r.length,i=new Array(o);i[0]=m;var a={};for(var c in t)hasOwnProperty.call(t,c)&&(a[c]=t[c]);a.originalType=e,a[p]="string"==typeof e?e:s,i[1]=a;for(var l=2;l<o;l++)i[l]=r[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},90705:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>a,toc:()=>l});var n=r(25773),s=(r(27378),r(35318));const o={sidebar_position:3.01,description:"Learn how to generate a mouse click with an air pressure sensor using TypeScript and the HidMouse class from the ds library. Tune the pressure threshold to detect a user blowing on the sensor and optimize debouncing with observables.",keywords:["air pressure sensor","mouse click","TypeScript","HidMouse","ds library"]},i="Commands",a={unversionedId:"developer/commands",id:"developer/commands",title:"Commands",description:"Learn how to generate a mouse click with an air pressure sensor using TypeScript and the HidMouse class from the ds library. Tune the pressure threshold to detect a user blowing on the sensor and optimize debouncing with observables.",source:"@site/docs/developer/commands.mdx",sourceDirName:"developer",slug:"/developer/commands",permalink:"/devicescript/developer/commands",draft:!1,tags:[],version:"current",sidebarPosition:3.01,frontMatter:{sidebar_position:3.01,description:"Learn how to generate a mouse click with an air pressure sensor using TypeScript and the HidMouse class from the ds library. Tune the pressure threshold to detect a user blowing on the sensor and optimize debouncing with observables.",keywords:["air pressure sensor","mouse click","TypeScript","HidMouse","ds library"]},sidebar:"tutorialSidebar",previous:{title:"Register",permalink:"/devicescript/developer/register"},next:{title:"Drivers",permalink:"/devicescript/developer/drivers/"}},c={},l=[],u={toc:l},p="wrapper";function d(e){let{components:t,...r}=e;return(0,s.kt)(p,(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"commands"},"Commands"),(0,s.kt)("p",null,"Let's assume that ",(0,s.kt)("inlineCode",{parentName:"p"},"1400")," hPa is a threshold high enough\nto detect a user blowing on the sensor; then we\ncan add code to generate a mouse click."),(0,s.kt)("p",null,(0,s.kt)("inlineCode",{parentName:"p"},"1400")," is rater arbitrary and this is the kind of constants\nthat you will want to tune using the actual hardware sensors,\nnot just a simulator."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts",metastring:"skip no-run",skip:!0,"no-run":!0},"if (pressure > 1400) {\n    await mouse.setButton(ds.HidMouseButton.Left, ds.HidMouseButtonEvent.Click)\n}\n")),(0,s.kt)("p",null,"The full sample looks like this."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts",metastring:"edit",edit:!0},'console.log("starting...")\nconst sensor = new ds.AirPressure()\nconst mouse = new ds.HidMouse()\n// listen for pressure changes\nsensor.reading.subscribe(async pressure => {\n    console.log(pressure)\n    // user blows in straw\n    if (pressure > 1400) {\n        // click!\n        console.log(`click!`)\n        await mouse.setButton(\n            ds.HidMouseButton.Left,\n            ds.HidMouseButtonEvent.Click\n        )\n        // debouncing\n        await ds.sleep(50)\n    }\n})\n')),(0,s.kt)("p",null,"To get better debouncing, see ",(0,s.kt)("a",{parentName:"p",href:"/developer/observables"},"observables"),"."))}d.isMDXComponent=!0}}]);