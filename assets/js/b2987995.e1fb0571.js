"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5048],{35318:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>f});var n=r(27378);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var s=n.createContext({}),p=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},d=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),c=p(r),m=i,f=c["".concat(s,".").concat(m)]||c[m]||u[m]||a;return r?n.createElement(f,l(l({ref:t},d),{},{components:r})):n.createElement(f,l({ref:t},d))}));function f(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=r.length,l=new Array(a);l[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[c]="string"==typeof e?e:i,l[1]=o;for(var p=2;p<a;p++)l[p]=r[p];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},61749:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>a,metadata:()=>o,toc:()=>p});var n=r(25773),i=(r(27378),r(35318));const a={title:"LEDs"},l="LEDs",o={unversionedId:"developer/leds/index",id:"developer/leds/index",title:"LEDs",description:"Controlling strips of programmable LEDs can be done through the Led client.",source:"@site/docs/developer/leds/index.mdx",sourceDirName:"developer/leds",slug:"/developer/leds/",permalink:"/devicescript/developer/leds/",draft:!1,tags:[],version:"current",frontMatter:{title:"LEDs"},sidebar:"tutorialSidebar",previous:{title:"JSX/TSX",permalink:"/devicescript/developer/jsx"},next:{title:"Display",permalink:"/devicescript/developer/leds/display"}},s={},p=[{value:"Driver",id:"driver",level:2},{value:"Simulation and long strips (&gt; 64 LEDs)",id:"simulation-and-long-strips--64-leds",level:2},{value:"PixelBuffer and show",id:"pixelbuffer-and-show",level:2},{value:"showAll",id:"showall",level:3},{value:"LED Display",id:"led-display",level:2}],d={toc:p},c="wrapper";function u(e){let{components:t,...r}=e;return(0,i.kt)(c,(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"leds"},"LEDs"),(0,i.kt)("p",null,"Controlling strips of programmable LEDs can be done through the ",(0,i.kt)("inlineCode",{parentName:"p"},"Led")," client."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"This client requires to import the ",(0,i.kt)("inlineCode",{parentName:"strong"},"@devicescript/runtime")," to get all the functionalities.")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},'import { Led } from "@devicescript/core"\n// highlight-next-line\nimport "@devicescript/runtime"\n\nconst led = new Led()\n')),(0,i.kt)("h2",{id:"driver"},"Driver"),(0,i.kt)("p",null,"You can start a driver for WS2812 or AP102 using ",(0,i.kt)("a",{parentName:"p",href:"./leds/driver"},"startLed"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},'import { LedVariant, LedStripLightType } from "@devicescript/core"\nimport { startLed } from "@devicescript/drivers"\nimport { pins } from "@dsboard/adafruit_qt_py_c3"\nimport { spi } from "@devicescript/spi"\n\n// highlight-start\nconst led = await startLed({\n    length: 32,\n    variant: LedVariant.Ring,\n    hwConfig: {\n        type: LedStripLightType.SK9822,\n        pinClk: pins.A1_D1,\n        pinData: pins.A0_D0,\n        spi: spi,\n    },\n})\n// highlight-end\n')),(0,i.kt)("h2",{id:"simulation-and-long-strips--64-leds"},"Simulation and long strips (> 64 LEDs)"),(0,i.kt)("p",null,"For short LED strips, 64 LEDs or less, DeviceScript provides full simulation and device twin\nfor hardware and simulated devices."),(0,i.kt)("p",null,"For strips longer than 64 LEDs, the simulator device will work but the hardware device twin will\nnot work anymore. This is a simple limitation that the data overflows the packets used in Jacdac."),(0,i.kt)("h2",{id:"pixelbuffer-and-show"},"PixelBuffer and show"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"Led")," client has a ",(0,i.kt)("a",{parentName:"p",href:"/api/runtime/pixelbuffer"},"pixel buffer"),", a 1D vector of colors,\nthat can be used to perform color operations, and a ",(0,i.kt)("inlineCode",{parentName:"p"},"show")," function to render the buffer to the hardware."),(0,i.kt)("p",null,"A typical LED program would then look like this:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},'import { LedStripLightType } from "@devicescript/core"\nimport { startLed } from "@devicescript/drivers"\nimport { fillSolid } from "@devicescript/runtime"\nimport { pins } from "@dsboard/adafruit_qt_py_c3"\n\nconst led = await startLed({\n    length: 32,\n    hwConfig: { type: LedStripLightType.WS2812B_GRB, pin: pins.A0_D0 },\n})\n\n// retreive pixel buffer from led\nconst pixels = await led.buffer()\n// do operations on pixels, like setting LEDs to green\nfillSolid(pixels, 0x00ee00)\n// send colors to hardware\nawait led.show()\n')),(0,i.kt)("h3",{id:"showall"},"showAll"),(0,i.kt)("p",null,"A convenience function ",(0,i.kt)("inlineCode",{parentName:"p"},"showAll")," is provided to set the color of all LEDs."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},'import { Led } from "@devicescript/core"\nimport "@devicescript/runtime"\n\nconst led = new Led()\n// highlight-next-line\nawait led.showAll(0x00ee00)\n')),(0,i.kt)("h2",{id:"led-display"},"LED Display"),(0,i.kt)("p",null,"You can mount a LED matrix as a ",(0,i.kt)("a",{parentName:"p",href:"./leds/display"},"display"),".\nThis can be helpful for matrix-shaped LEDs."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},'import { pins } from "@dsboard/esp32_c3fh4_rgb"\nimport { LedStripLightType, LedVariant } from "@devicescript/core"\nimport { startLed } from "@devicescript/drivers"\nimport { startLedDisplay } from "@devicescript/runtime"\n\nconst led = await startLed({\n    length: 25,\n    columns: 5,\n    variant: LedVariant.Matrix,\n    hwConfig: { type: LedStripLightType.WS2812B_GRB, pin: pins.LEDS },\n})\n\n// highlight-next-line\nconst display = await startLedDisplay(led)\n')))}u.isMDXComponent=!0}}]);