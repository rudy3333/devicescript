"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4768],{35318:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var i=n(27378);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=i.createContext({}),c=function(e){var t=i.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=c(e.components);return i.createElement(o.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},g=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,o=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=c(n),g=r,m=d["".concat(o,".").concat(g)]||d[g]||u[g]||a;return n?i.createElement(m,l(l({ref:t},p),{},{components:n})):i.createElement(m,l({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,l=new Array(a);l[0]=g;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s[d]="string"==typeof e?e:r,l[1]=s;for(var c=2;c<a;c++)l[c]=n[c];return i.createElement.apply(null,l)}return i.createElement.apply(null,n)}g.displayName="MDXCreateElement"},36599:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var i=n(25773),r=(n(27378),n(35318));const a={},l="Settings",s={unversionedId:"api/settings/index",id:"api/settings/index",title:"Settings",description:"The @devicescript/settings builtin module provides a lightweight flash storage for small setting values.",source:"@site/docs/api/settings/index.md",sourceDirName:"api/settings",slug:"/api/settings/",permalink:"/devicescript/api/settings/",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Utilities operators",permalink:"/devicescript/api/observables/utils"},next:{title:"Test",permalink:"/devicescript/api/test/"}},o={},c=[{value:"Usage",id:"usage",level:2},{value:"<code>.env.defaults</code> and <code>.env.local</code> files",id:"envdefaults-and-envlocal-files",level:3},{value:"writeSetting",id:"writesetting",level:3},{value:"readSetting",id:"readsetting",level:3},{value:"deleteSetting",id:"deletesetting",level:3}],p={toc:c},d="wrapper";function u(e){let{components:t,...n}=e;return(0,r.kt)(d,(0,i.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"settings"},"Settings"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"@devicescript/settings")," ",(0,r.kt)("a",{parentName:"p",href:"/developer/packages"},"builtin")," module provides a lightweight flash storage for small setting values.\nSettings values are serialized in flash and available across device reset. Firmware updates might erase the settings."),(0,r.kt)("h2",{id:"usage"},"Usage"),(0,r.kt)("p",null,"You can store settings and secrets in ",(0,r.kt)("inlineCode",{parentName:"p"},".env")," files."),(0,r.kt)("h3",{id:"envdefaults-and-envlocal-files"},(0,r.kt)("inlineCode",{parentName:"h3"},".env.defaults")," and ",(0,r.kt)("inlineCode",{parentName:"h3"},".env.local")," files"),(0,r.kt)("p",null,"Don't store secrets or settings in the code, use ",(0,r.kt)("inlineCode",{parentName:"p"},".env")," files instead."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"./.env.defaults"),": store general settings (",(0,r.kt)("strong",{parentName:"li"},"tracked by version control"),")"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"./.env.local"),": store secrets or override for general settings (",(0,r.kt)("strong",{parentName:"li"},"untracked by version control"),")")),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},".env*")," file use a similar format to node.js ",(0,r.kt)("inlineCode",{parentName:"p"},".env")," file."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-env",metastring:'title="./.env.defaults"',title:'"./.env.defaults"'},"# This file is tracked by git. DO NOT store secrets in this file.\nTEMP=68\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-env",metastring:'title="./.env.local"',title:'"./.env.local"'},"# This file is **NOT** tracked by git and may contain secrets\nPASSWORD=VALUE\nTEMP=70 # override TEMP\n")),(0,r.kt)("p",null,"The secrets can only be accessed by the DeviceScript program and are not available through the Jacdac protocol."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"multiline values, and ",(0,r.kt)("inlineCode",{parentName:"li"},"#")," in quote strings are not supported."),(0,r.kt)("li",{parentName:"ul"},"key length should be less than 14 characters.")),(0,r.kt)("h3",{id:"writesetting"},"writeSetting"),(0,r.kt)("p",null,"Serializes an object into a setting at a given key. The key name should be less than 16 characters."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'import { writeSetting } from "@devicescript/settings"\n\n// highlight-next-line\nawait writeSetting("hello", { world: true })\n')),(0,r.kt)("h3",{id:"readsetting"},"readSetting"),(0,r.kt)("p",null,"Deserializes an object from a setting at a given key. If the key is missing or invalid format, it returns ",(0,r.kt)("inlineCode",{parentName:"p"},"undefined")," or the second argument."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'import { readSetting } from "@devicescript/settings"\n\n// highlight-next-line\nconst world = await readSetting("hello", ":)")\n')),(0,r.kt)("h3",{id:"deletesetting"},"deleteSetting"),(0,r.kt)("p",null,"Deletes a setting at the given key. If the setting does not exist, does nothing."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'import { deleteSetting } from "@devicescript/settings"\n\n// highlight-next-line\nawait deleteSetting("hello")\n')))}u.isMDXComponent=!0}}]);