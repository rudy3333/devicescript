"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[229],{35318:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>v});var i=r(27378);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,i)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,i,n=function(e,t){if(null==e)return{};var r,i,n={},a=Object.keys(e);for(i=0;i<a.length;i++)r=a[i],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)r=a[i],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var l=i.createContext({}),p=function(e){var t=i.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},c=function(e){var t=p(e.components);return i.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},m=i.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=p(r),m=n,v=u["".concat(l,".").concat(m)]||u[m]||d[m]||a;return r?i.createElement(v,o(o({ref:t},c),{},{components:r})):i.createElement(v,o({ref:t},c))}));function v(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,o=new Array(a);o[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:n,o[1]=s;for(var p=2;p<a;p++)o[p]=r[p];return i.createElement.apply(null,o)}return i.createElement.apply(null,r)}m.displayName="MDXCreateElement"},21939:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>p});var i=r(25773),n=(r(27378),r(35318));const a={title:"Drivers",sidebar_position:2.5},o="Drivers",s={unversionedId:"developer/drivers/index",id:"developer/drivers/index",title:"Drivers",description:"In DeviceScript, any hardware component is accessed through a service client.",source:"@site/docs/developer/drivers/index.mdx",sourceDirName:"developer/drivers",slug:"/developer/drivers/",permalink:"/devicescript/developer/drivers/",draft:!1,tags:[],version:"current",sidebarPosition:2.5,frontMatter:{title:"Drivers",sidebar_position:2.5},sidebar:"tutorialSidebar",previous:{title:"Commands",permalink:"/devicescript/developer/commands"},next:{title:"Digital IO (GPIO)",permalink:"/devicescript/developer/drivers/digital-io/"}},l={},p=[{value:"Analog (builtin)",id:"analog-builtin",level:2},{value:"Digital IO",id:"digital-io",level:2},{value:"I2C",id:"i2c",level:2},{value:"SPI",id:"spi",level:2},{value:"What about missing drivers?",id:"what-about-missing-drivers",level:2},{value:"Jacdac modules",id:"jacdac-modules",level:2},{value:"Serial, PWM",id:"serial-pwm",level:2}],c={toc:p},u="wrapper";function d(e){let{components:t,...r}=e;return(0,n.kt)(u,(0,i.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"drivers"},"Drivers"),(0,n.kt)("p",null,"In DeviceScript, any hardware component is accessed through a service ",(0,n.kt)("strong",{parentName:"p"},"client"),".\nA ",(0,n.kt)("strong",{parentName:"p"},"driver")," implement one or more service ",(0,n.kt)("strong",{parentName:"p"},"servers")," for a given hardware peripherical."),(0,n.kt)("p",null,"The ",(0,n.kt)("a",{parentName:"p",href:"/developer/packages"},"drivers builtin package")," exposes drivers for a number of periphericals."),(0,n.kt)("h2",{id:"analog-builtin"},(0,n.kt)("a",{parentName:"h2",href:"/developer/drivers/analog"},"Analog")," (builtin)"),(0,n.kt)("p",null,"DeviceScript provides helper functions to mount a variety of servers out of the box\nin the ",(0,n.kt)("inlineCode",{parentName:"p"},"@devicescript/servers")," module."),(0,n.kt)("p",null,"For example, the ",(0,n.kt)("a",{parentName:"p",href:"/api/drivers/button"},"startButton")," function allows your script\nto mount a ",(0,n.kt)("a",{parentName:"p",href:"https://microsoft.github.io/jacdac-docs/services/button"},"button server"),"\nover a pin and returns the ",(0,n.kt)("a",{parentName:"p",href:"/api/clients/button"},"client")," for it."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts",metastring:"no-run","no-run":!0},'import { gpio } from "@devicescript/core"\nimport { startButton } from "@devicescript/servers"\n\nconst buttonA = startButton({\n    pin: gpio(2),\n})\nbuttonA.up.subscribe(() => {\n    console.log("up!")\n})\n')),(0,n.kt)("p",null,"Once you've added this code to your script, you can interact with pin ",(0,n.kt)("inlineCode",{parentName:"p"},"2"),"\n(hardware specific identifier) through the ",(0,n.kt)("inlineCode",{parentName:"p"},"buttonA")," client. The variable name is\nautomatically used as the ",(0,n.kt)("strong",{parentName:"p"},"role")," and ",(0,n.kt)("strong",{parentName:"p"},"instance")," name."),(0,n.kt)("h2",{id:"digital-io"},(0,n.kt)("a",{parentName:"h2",href:"/developer/drivers/digital-io"},"Digital IO")),(0,n.kt)("p",null,"Drivers can be implemented using digital IO\nand are either built-in from C or authored in DeviceScript directly."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},'import { gpio, GPIOMode } from "@devicescript/core"\nimport "@devicescript/gpio"\n\nconst p0 = gpio(0)\nawait p0.setMode(GPIOMode.Output)\nawait p0.write(true)\n')),(0,n.kt)("h2",{id:"i2c"},(0,n.kt)("a",{parentName:"h2",href:"/developer/drivers/i2c"},"I2C")),(0,n.kt)("p",null,"Drivers can be implemented using I2C\nand are either built-in from C or authored in DeviceScript directly."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts",metastring:"skip",skip:!0},'import { i2c } from "@devicescript/i2c"\n\n...\nawait i2c.writeReg(address, register, value)\n')),(0,n.kt)("h2",{id:"spi"},(0,n.kt)("a",{parentName:"h2",href:"/developer/drivers/spi"},"SPI")),(0,n.kt)("p",null,"Drivers can be implemented using SPI\nand are either built-in from C or authored in DeviceScript directly."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts",metastring:"skip",skip:!0},'import { spi } from "@devicescript/spi"\n\n...\nawait spi.write(hex`abcd`)\n')),(0,n.kt)("h2",{id:"what-about-missing-drivers"},"What about missing drivers?"),(0,n.kt)("p",null,"So the driver you need isn't here? There are a few options:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.npmjs.com/search?q=devicescript"},"Search on npm")," where a community member may have already published a driver."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/microsoft/devicescript/labels/driver%20request"},"Check if a request is already open")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/microsoft/devicescript/issues/new?assignees=&labels=enhancement&projects=&template=feature_request.md&title="},"Create a Driver Request")," to request a new driver. We can't guarantee that we'll have time to implement it, but we maybe someone in the community will!")),(0,n.kt)("h2",{id:"jacdac-modules"},"Jacdac modules"),(0,n.kt)("p",null,"If you connect a ",(0,n.kt)("a",{parentName:"p",href:"https://aka.ms/jacdac"},"Jacdac module"),", it will automatically run as a service server and\nyou will be able to bind a role to that module."),(0,n.kt)("p",null,"For example, the KittenBot KeyCap button will surface as a ",(0,n.kt)("strong",{parentName:"p"},"button server")," when connected."),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://microsoft.github.io/jacdac-docs/devices/kittenbot/keycapbuttonv10/"},(0,n.kt)("img",{parentName:"a",src:"https://microsoft.github.io/jacdac-docs/images/devices/kittenbot/keycapbuttonv10.list.jpg",alt:"A KittenBot KeyCap button",title:"KittenBot KeyCap button"}))),(0,n.kt)("h2",{id:"serial-pwm"},"Serial, PWM"),(0,n.kt)("p",null,"Serial, PWM are not supported yet at the DeviceScript level,\nhowever specific PWM uses (such as servos, buzzers, light bulbs, motors)\nare supported through ",(0,n.kt)("inlineCode",{parentName:"p"},"@devicescript/servers"),"."))}d.isMDXComponent=!0}}]);