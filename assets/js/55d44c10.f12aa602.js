"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5998],{35318:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>v});var r=t(27378);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=r.createContext({}),s=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},u=function(e){var n=s(e.components);return r.createElement(c.Provider,{value:n},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=s(t),m=o,v=p["".concat(c,".").concat(m)]||p[m]||d[m]||i;return t?r.createElement(v,a(a({ref:n},u),{},{components:t})):r.createElement(v,a({ref:n},u))}));function v(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=m;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l[p]="string"==typeof e?e:o,a[1]=l;for(var s=2;s<i;s++)a[s]=t[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},46254:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var r=t(25773),o=(t(27378),t(35318));const i={sidebar_position:3,description:"Learn how to configure and manage environment settings using Devicescript Cloud, OpenAPI, and Visual Studio Code extension.",keywords:["devicescript cloud","environment configuration","OpenAPI","Visual Studio Code extension","environment management"]},a="Environment",l={unversionedId:"developer/development-gateway/environment",id:"developer/development-gateway/environment",title:"Environment",description:"Learn how to configure and manage environment settings using Devicescript Cloud, OpenAPI, and Visual Studio Code extension.",source:"@site/docs/developer/development-gateway/environment.mdx",sourceDirName:"developer/development-gateway",slug:"/developer/development-gateway/environment",permalink:"/devicescript/developer/development-gateway/environment",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,description:"Learn how to configure and manage environment settings using Devicescript Cloud, OpenAPI, and Visual Studio Code extension.",keywords:["devicescript cloud","environment configuration","OpenAPI","Visual Studio Code extension","environment management"]},sidebar:"tutorialSidebar",previous:{title:"Application Telemetry",permalink:"/devicescript/developer/development-gateway/telemetry"},next:{title:"Configuration",permalink:"/devicescript/developer/development-gateway/configuration"}},c={},s=[{value:"value",id:"value",level:2},{value:"subscribe",id:"subscribe",level:2}],u={toc:s},p="wrapper";function d(e){let{components:n,...t}=e;return(0,o.kt)(p,(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"environment"},"Environment"),(0,o.kt)("p",null,"An configuration object pushed from the cloud as an observable. The environment can be configured\nthrough the gateway OpenAPI or the Visual Studio Code extension."),(0,o.kt)("p",null,"The environment is cached locally in the settings to handle offline scenarios."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'import { environment } from "@devicescript/cloud"\n\n// highlight-next-line\nconst env = await environment<{ target: number }>()\n')),(0,o.kt)("h2",{id:"value"},"value"),(0,o.kt)("p",null,"Reads the current value of the environment."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'import { environment } from "@devicescript/cloud"\nconst env = await environment<{ target: number }>()\n\n// highlight-next-line\nconst { target } = await env.read()\n')),(0,o.kt)("h2",{id:"subscribe"},"subscribe"),(0,o.kt)("p",null,"Subscribes to updates to the environment values."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'import { environment } from "@devicescript/cloud"\nconst env = await environment<{ target: number }>()\n\n// highlight-next-line\nenv.subscribe(async ({ target }) => {\n    console.log(target)\n})\n')))}d.isMDXComponent=!0}}]);