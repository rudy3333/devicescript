"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8785],{35318:(e,t,i)=>{i.d(t,{Zo:()=>d,kt:()=>v});var a=i(27378);function r(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function n(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,a)}return i}function s(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?n(Object(i),!0).forEach((function(t){r(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):n(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function o(e,t){if(null==e)return{};var i,a,r=function(e,t){if(null==e)return{};var i,a,r={},n=Object.keys(e);for(a=0;a<n.length;a++)i=n[a],t.indexOf(i)>=0||(r[i]=e[i]);return r}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(a=0;a<n.length;a++)i=n[a],t.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(r[i]=e[i])}return r}var p=a.createContext({}),c=function(e){var t=a.useContext(p),i=t;return e&&(i="function"==typeof e?e(t):s(s({},t),e)),i},d=function(e){var t=c(e.components);return a.createElement(p.Provider,{value:t},e.children)},l="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var i=e.components,r=e.mdxType,n=e.originalType,p=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),l=c(i),m=r,v=l["".concat(p,".").concat(m)]||l[m]||u[m]||n;return i?a.createElement(v,s(s({ref:t},d),{},{components:i})):a.createElement(v,s({ref:t},d))}));function v(e,t){var i=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var n=i.length,s=new Array(n);s[0]=m;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[l]="string"==typeof e?e:r,s[1]=o;for(var c=2;c<n;c++)s[c]=i[c];return a.createElement.apply(null,s)}return a.createElement.apply(null,i)}m.displayName="MDXCreateElement"},15468:(e,t,i)=>{i.d(t,{Z:()=>s});var a=i(98948),r=i(27378);const n={device__photo:"device__photo_XeRs"};function s(e){const{image:t,imageAlt:i,description:s,title:o,href:p}=e,c=(0,a.Z)(p);return r.createElement("a",{href:c,className:"avatar margin-vert--md"},r.createElement("img",{className:`avatar__photo-link avatar__photo avatar__photo--xl ${n.device__photo}`,alt:i||`photograph of ${o}`,src:t}),r.createElement("div",{className:"avatar__intro"},r.createElement("div",{className:"avatar__name"},o),s?r.createElement("small",{className:"avatar__subtitle"},s):null))}},31745:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>m,frontMatter:()=>s,metadata:()=>p,toc:()=>d});var a=i(25773),r=(i(27378),i(35318)),n=i(15468);const s={},o="ESP32",p={unversionedId:"devices/esp32/index",id:"devices/esp32/index",title:"ESP32",description:"The following devices use the firmware from https://github.com/microsoft/devicescript-esp32 which builds on top of ESP-IDF.",source:"@site/docs/devices/esp32/index.mdx",sourceDirName:"devices/esp32",slug:"/devices/esp32/",permalink:"/devicescript/devices/esp32/",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Devices",permalink:"/devicescript/devices/"},next:{title:"Adafruit Feather ESP32-S2",permalink:"/devicescript/devices/esp32/adafruit-feather-esp32-s2"}},c={},d=[{value:"Requirements",id:"requirements",level:2},{value:"Usage",id:"usage",level:2},{value:"Listing boards",id:"listing-boards",level:3},{value:"Targeting a specific board",id:"targeting-a-specific-board",level:3},{value:"Custom <code>write_flash</code> argument",id:"custom-write_flash-argument",level:3}],l={toc:d},u="wrapper";function m(e){let{components:t,...i}=e;return(0,r.kt)(u,(0,a.Z)({},l,i,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"esp32"},"ESP32"),(0,r.kt)("p",null,"The following devices use the firmware from ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/microsoft/devicescript-esp32"},"https://github.com/microsoft/devicescript-esp32")," which builds on top of ESP-IDF."),(0,r.kt)(n.Z,{image:"https://microsoft.github.io/jacdac-docs/images/devices/seeed-studio/xiaoesp32c3v00.preview.jpg",href:"/devices/esp32/seeed-xiao-esp32c3",title:"Seeed Studio XIAO ESP32C3",description:"A tiny ESP32-C3 board.",mdxType:"DeviceCard"}),(0,r.kt)(n.Z,{image:"https://microsoft.github.io/jacdac-docs/images/devices/adafruit/qtpyesp32c3wifidevboardv10.preview.jpg",href:"/devices/esp32/adafruit-qt-py-c3",title:"Adafruit QT Py ESP32-C3 WiFi",description:"A tiny ESP32-C3 board.",mdxType:"DeviceCard"}),(0,r.kt)("p",null,"and more..."),(0,r.kt)(n.Z,{image:"https://microsoft.github.io/jacdac-docs/images/devices/adafruit/qtpyesp32c3wifidevboardv10.preview.jpg",href:"/devices/esp32/adafruit-qt-py-c3",title:"Adafruit QT Py ESP32-C3 WiFi",description:"A tiny ESP32-C3 board.",mdxType:"DeviceCard"}),(0,r.kt)(n.Z,{image:"https://microsoft.github.io/jacdac-docs/images/devices/01space/esp32c3fh4rgbv10.preview.jpg",href:"/devices/esp32/esp32-c3fh4-rgb",title:"ESP32-C3FH4-RGB",description:"A tiny ESP32-C3 board with 5x5 LED array.",mdxType:"DeviceCard"}),(0,r.kt)(n.Z,{image:"https://microsoft.github.io/jacdac-docs/images/devices/espressif/esp32devkitcdevicescriptv40.preview.jpg",href:"/devices/esp32/esp32-devkit-c",title:"Espressif ESP32-DevKitC",description:"There are currently issues with serial chip on these, best avoid.",mdxType:"DeviceCard"}),(0,r.kt)(n.Z,{image:"https://microsoft.github.io/jacdac-docs/images/devices/espressif/esp32c3rustdevkitv12a.preview.jpg",href:"/devices/esp32/esp32c3-rust-devkit",title:"Espressif ESP32-C3-RUST-DevKit",description:"A ESP32-C3 dev-board from Espressif with IMU and Temp/Humidity sensor, originally for ESP32 Rust port.",mdxType:"DeviceCard"}),(0,r.kt)(n.Z,{image:"https://microsoft.github.io/jacdac-docs/images/devices/espressif/esp32s3devkitmv10.preview.jpg",href:"/devices/esp32/esp32s3-devkit-m",title:"Espressif ESP32-S3 DevKitM",description:"ESP32-S3 DevKitM development board.",mdxType:"DeviceCard"}),(0,r.kt)(n.Z,{image:"https://microsoft.github.io/jacdac-docs/images/devices/unexpected-maker/feathers2esp32s2v20.preview.jpg",href:"/devices/esp32/feather-s2",title:"Unexpected Maker FeatherS2 ESP32-S2",description:"ESP32-S2 based development board in a Feather format.",mdxType:"DeviceCard"}),(0,r.kt)(n.Z,{image:"https://microsoft.github.io/jacdac-docs/images/devices/kittenbot/grapebitv10.preview.jpg",href:"/devices/esp32/kittenbot-grapebit-esp32c3",title:"KittenBot Grape:Bit ESP32-C3",description:"A round board packed with IMU, buzzer, motor control, 4 RGB LEDs, and Jacdac.",mdxType:"DeviceCard"}),(0,r.kt)(n.Z,{image:"https://microsoft.github.io/jacdac-docs/images/devices/seeed-studio/xiaoesp32c3v00.preview.jpg",href:"/devices/esp32/seeed-xiao-esp32c3",title:"Seeed Studio XIAO ESP32C3",description:"A tiny ESP32-C3 board.",mdxType:"DeviceCard"}),(0,r.kt)(n.Z,{image:"https://microsoft.github.io/jacdac-docs/images/devices/seeed-studio/xiaoesp32c3withmsr218base218v46.preview.jpg",href:"/devices/esp32/seeed-xiao-esp32c3-msr218",title:"Seeed Studio XIAO ESP32C3 with MSR218 base",description:"A tiny ESP32-C3 board mounted on base with Jacdac, Qwiic and Grove connectors.",mdxType:"DeviceCard"}),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"Your device is not in the list? ",(0,r.kt)("a",{parentName:"p",href:"/devices/add-board"},"Add a new Device Configuration")," in your project.")),(0,r.kt)("h2",{id:"requirements"},"Requirements"),(0,r.kt)("p",null,"You will need to install ",(0,r.kt)("inlineCode",{parentName:"p"},"esptool.py")," first - you can do that using ",(0,r.kt)("a",{parentName:"p",href:"https://pip.pypa.io/en/stable/"},"pip"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"pip install esptool\n")),(0,r.kt)("h2",{id:"usage"},"Usage"),(0,r.kt)("p",null,"Connect your ESP32 board and run ",(0,r.kt)("inlineCode",{parentName:"p"},"devicescript flash esp32")," to flash DeviceScript runtime on it."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"devicescript flash esp32\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-console",metastring:'title="Output"',title:'"Output"'},"$ devicescript flash esp32\nusing serial port /dev/cu.usbmodem01 at 1500000\nesptool: /usr/local/bin/esptool.py\nIdentify arch\nesptool.py v4.5\nSerial port /dev/cu.usbmodem01\nConnecting...\nDetecting chip type... Unsupported detection protocol, switching and trying again...\nDetecting chip type... ESP32-S2\nChip is ESP32-S2 (revision v0.0)\nFeatures: WiFi, No Embedded Flash, No Embedded PSRAM, ADC and temperature sensor calibration in BLK2 of efuse V1\nCrystal is 40MHz\nMAC: 7c:df:a1:03:99:f4\nUploading stub...\nRunning stub...\nStub running...\nChanging baud rate to 1500000\nChanged.\nWarning: ESP32-S2 has no Chip ID. Reading MAC instead.\nMAC: 7c:df:a1:03:99:f4\nStaying in bootloader.\nPlease select board, available options:\n    --board msr207_v42                 JM Brain S2-mini 207 v4.2\n    --board msr207_v43                 JM Brain S2-mini 207 v4.3\n    --board msr48                      JacdacIoT 48 v0.2\n$\n")),(0,r.kt)("h3",{id:"listing-boards"},"Listing boards"),(0,r.kt)("p",null,"You can also get a full list of ESP32 boards without attempting any auto-detect."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"devicescript flash esp32 --board list\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-console",metastring:'title="Output"',title:'"Output"'},"$ devicescript flash esp32 --board list\nPlease select board, available options:\n    --board msr207_v42                 JM Brain S2-mini 207 v4.2\n    --board msr207_v43                 JM Brain S2-mini 207 v4.3\n    --board msr48                      JacdacIoT 48 v0.2\n    --board adafruit_qt_py_c3          Adafruit QT Py ESP32-C3 WiFi Dev Board\n    --board esp32_devkit_c             Espressif ESP32-DevKitC\n")),(0,r.kt)("h3",{id:"targeting-a-specific-board"},"Targeting a specific board"),(0,r.kt)("p",null,"Let's say your board is ",(0,r.kt)("inlineCode",{parentName:"p"},"adafruit_qt_py_c3"),". To target this board, use the ",(0,r.kt)("inlineCode",{parentName:"p"},"--board [boardid]")," flag."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"devicescript flash esp32 --board adafruit_qt_py_c3\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-console",metastring:'title="Output"',title:'"Output"'},"$ devicescript flash esp32 --board adafruit_qt_py_c3\nusing serial port /dev/cu.usbmodem14211401 at 1500000\nesptool: /usr/local/bin/esptool.py\nfetch https://github.com/microsoft/jacdac-esp32/releases/latest/download/devicescript-esp32c3-adafruit_qt_py_c3-0x0.bin\nsaved .devicescript/cache/devicescript-esp32c3-adafruit_qt_py_c3-0x0.bin 982208 bytes\nesptool.py v4.5\nSerial port /dev/cu.usbmodem14211401\nConnecting....\nDetecting chip type... ESP32-C3\nChip is ESP32-C3 (revision v0.3)\nFeatures: WiFi, BLE\nCrystal is 40MHz\nMAC: 34:b4:72:ea:17:88\nUploading stub...\nRunning stub...\nStub running...\nChanging baud rate to 1500000\nChanged.\nConfiguring flash size...\nFlash will be erased from 0x00000000 to 0x000effff...\nCompressed 982208 bytes to 532293...\nWriting at 0x00000000... (3 %)\nWriting at 0x00011e9e... (6 %)\n[...snip...]\nWriting at 0x000e576f... (96 %)\nWriting at 0x000ec5d7... (100 %)\nWrote 982208 bytes (532293 compressed) at 0x00000000 in 7.5 seconds (effective 1042.1 kbit/s)...\nHash of data verified.\n\nLeaving...\nHard resetting via RTS pin...\n$\n")),(0,r.kt)("p",null,"After flashing, your board has the DeviceScript runtime and you can program it using DeviceScript."),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"Check out the ",(0,r.kt)("a",{parentName:"p",href:"/developer/errors"},"errors")," page if you run into any issues.")),(0,r.kt)("h3",{id:"custom-write_flash-argument"},"Custom ",(0,r.kt)("inlineCode",{parentName:"h3"},"write_flash")," argument"),(0,r.kt)("p",null,"Use the ",(0,r.kt)("inlineCode",{parentName:"p"},"$flashToolArguments")," field in the board definition to specify additional arguments to ",(0,r.kt)("inlineCode",{parentName:"p"},"esptool")," ",(0,r.kt)("inlineCode",{parentName:"p"},"write_flash"),", such as ",(0,r.kt)("inlineCode",{parentName:"p"},"--flash_mode"),"."))}m.isMDXComponent=!0}}]);