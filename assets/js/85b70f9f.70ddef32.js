"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8534],{35318:(e,r,t)=>{t.d(r,{Zo:()=>l,kt:()=>v});var i=t(27378);function n(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);r&&(i=i.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,i)}return t}function p(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){n(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function o(e,r){if(null==e)return{};var t,i,n=function(e,r){if(null==e)return{};var t,i,n={},a=Object.keys(e);for(i=0;i<a.length;i++)t=a[i],r.indexOf(t)>=0||(n[t]=e[t]);return n}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)t=a[i],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var s=i.createContext({}),c=function(e){var r=i.useContext(s),t=r;return e&&(t="function"==typeof e?e(r):p(p({},r),e)),t},l=function(e){var r=c(e.components);return i.createElement(s.Provider,{value:r},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var r=e.children;return i.createElement(i.Fragment,{},r)}},m=i.forwardRef((function(e,r){var t=e.components,n=e.mdxType,a=e.originalType,s=e.parentName,l=o(e,["components","mdxType","originalType","parentName"]),d=c(t),m=n,v=d["".concat(s,".").concat(m)]||d[m]||u[m]||a;return t?i.createElement(v,p(p({ref:r},l),{},{components:t})):i.createElement(v,p({ref:r},l))}));function v(e,r){var t=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var a=t.length,p=new Array(a);p[0]=m;var o={};for(var s in r)hasOwnProperty.call(r,s)&&(o[s]=r[s]);o.originalType=e,o[d]="string"==typeof e?e:n,p[1]=o;for(var c=2;c<a;c++)p[c]=t[c];return i.createElement.apply(null,p)}return i.createElement.apply(null,t)}m.displayName="MDXCreateElement"},66601:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>s,contentTitle:()=>p,default:()=>u,frontMatter:()=>a,metadata:()=>o,toc:()=>c});var i=t(25773),n=(t(27378),t(35318));const a={title:"UC8151"},p="UC8151 eInk Driver",o={unversionedId:"api/drivers/uc8151",id:"api/drivers/uc8151",title:"UC8151",description:"Driver for UC8151 eInk screens.",source:"@site/docs/api/drivers/uc8151.mdx",sourceDirName:"api/drivers",slug:"/api/drivers/uc8151",permalink:"/devicescript/api/drivers/uc8151",draft:!1,tags:[],version:"current",frontMatter:{title:"UC8151"},sidebar:"tutorialSidebar",previous:{title:"Traffic Light",permalink:"/devicescript/api/drivers/trafficlight"},next:{title:"Water Level",permalink:"/devicescript/api/drivers/waterlevel"}},s={},c=[{value:"Display",id:"display",level:2},{value:"Driver",id:"driver",level:2}],l={toc:c},d="wrapper";function u(e){let{components:r,...t}=e;return(0,n.kt)(d,(0,i.Z)({},l,t,{components:r,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"uc8151-eink-driver"},"UC8151 eInk Driver"),(0,n.kt)("p",null,"Driver for UC8151 eInk screens."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},'import { UC8151Driver } from "@devicescript/drivers"\n')),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.orientdisplay.com/wp-content/uploads/2022/09/UC8151C.pdf"},"Datasheet for UC8151"))),(0,n.kt)("p",null,(0,n.kt)("img",{parentName:"p",src:"https://github.com/mmoskal/devicescript-pimoroni-pico-badger/raw/main/assets/badger-w.jpg",alt:"Pimoroni Badger W"})),(0,n.kt)("p",null,"The driver is used by the following packages:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.npmjs.com/package/devicescript-pimoroni-pico-badger"},"devicescript-pimoroni-pico-badger"))),(0,n.kt)("h2",{id:"display"},"Display"),(0,n.kt)("p",null,"The driver implements the ",(0,n.kt)("a",{parentName:"p",href:"/developer/graphics/display"},"Display")," interface and can be used as various services.\nUsing the driver through services provides a better simulation experience."),(0,n.kt)("h2",{id:"driver"},"Driver"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/microsoft/devicescript/blob/main/packages/drivers/src/uc8151.ts"},"Source"))),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},'import * as ds from "@devicescript/core"\nimport { UC8151Driver } from "@devicescript/drivers"\nimport { Image, font8, scaledFont } from "@devicescript/graphics"\nimport { spi } from "@devicescript/spi"\nimport { pins } from "@dsboard/pico_w"\n\nspi.configure({\n    miso: pins.GP16,\n    mosi: pins.GP19,\n    sck: pins.GP18,\n    hz: 8_000_000,\n})\n\nconst display = new UC8151Driver(Image.alloc(296, 128, 1), {\n    cs: pins.GP17,\n    dc: pins.GP20,\n    reset: pins.GP21,\n    busy: pins.GP26,\n\n    flip: false,\n    spi: spi,\n})\nawait display.init()\nconst bigFont = scaledFont(font8(), 3)\ndisplay.image.print("Hello world!", 3, 10, 1, bigFont)\nawait display.show()\n')))}u.isMDXComponent=!0}}]);